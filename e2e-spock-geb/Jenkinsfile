def odsNamespace = ''
def odsGitRef = ''
def odsImageTag = ''
def sharedLibraryRef = ''
def agentImageTag = ''

node {
  odsNamespace = env.ODS_NAMESPACE ?: 'ods'
  odsGitRef = env.ODS_GIT_REF ?: 'master'
  odsImageTag = env.ODS_IMAGE_TAG ?: 'latest'
  sharedLibraryRef = env.SHARED_LIBRARY_REF ?: odsImageTag
  agentImageTag = env.AGENT_IMAGE_TAG ?: odsImageTag
}

library("ods-jenkins-shared-library@${sharedLibraryRef}")

odsQuickstarterPipeline(
  imageStreamTag: "${odsNamespace}/jenkins-agent-jdk:${agentImageTag}",
) { context ->

  odsQuickstarterStageCopyFiles(context)

  odsQuickstarterStageRenderJenkinsfile(context)
	
  createSauceLabsOpenshiftSecret(context)

  odsQuickstarterStageRenderSonarProperties(context)
}

def createSauceLabsOpenshiftSecret(def context) {
  stage('Create Credentials') {
    def project = context.projectId + "-cd"
    def secretExists = sh(script: "oc get secret sauce-labs-user-access-key -n $project", returnStatus: true) == 0
    if (!secretExists) {
      sh """
        oc create secret generic sauce-labs-user-access-key -n $project \
          --from-literal=username=changeme \
          --from-literal=password=changeme \
          --type="kubernetes.io/basic-auth" && \
        oc label secret sauce-labs-user-access-key -n $project credential.sync.jenkins.openshift.io=true
      """
    }
  }
}