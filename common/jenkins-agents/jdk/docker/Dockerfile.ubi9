FROM opendevstackorg/ods-jenkins-agent-base-ubi8:latest

# Labels consumed by Red Hat build service
LABEL com.redhat.component="jenkins-agent-jdk-35-rhel9-container" \
      name="openshift4/jenkins-agent-jdk-35-rhel9" \
      architecture="x86_64" \
      io.k8s.display-name="Jenkins Agent JDK" \
      io.k8s.description="The jenkins agent jdk image has java 11, 17 and 21 installed on top of the jenkins agent base image." \
      io.openshift.tags="openshift,jenkins,agent,jdk" \
      maintainer="openshift-dev-services+jenkins@redhat.com"

ARG nexusUrl
ARG nexusUsername
ARG nexusPassword

ENV LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

# Container support is now integrated in Java 11, the +UseCGroupMemoryLimitForHeap option has been pruned
ENV JAVA_TOOL_OPTIONS="-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true"

# Workaround we use when running behind proxy
# Basically we put the proxy certificate in certs folder
# COPY certs/* /etc/pki/ca-trust/source/anchors/
# RUN update-ca-trust force-enable && update-ca-trust extract

# Install Java devel 11, 17 21 and binutils
# Note: use java scripts are executed to test the scripts but also use-j11.sh in called 3nd place to set is as default version
RUN yum install -y java-11-openjdk-devel java-17-openjdk-devel java-21-openjdk-devel binutils && \
    yum clean all -y && \
    rm -rf /var/cache/yum

# Copy and use java scripts.
COPY use-j*.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/use-j*.sh && \
    chmod ugo+s /usr/local/bin/use-j*.sh && \
    sh -c 'chmod ugo+s $(which alternatives)' && \
    ls -la /usr/local/bin/use-j*.sh && \
    echo "--- STARTS JDK 11/17/21 TESTS ---" && \
    use-j11.sh && \
    use-j21.sh && \
    use-j17.sh && \
    echo "--- ENDS JDK 11/17/21 TESTS ---"

# Set maven (nexus+proxy) and gradle (proxy) settings
ENV MAVEN_OPTS="-Duser.home=$HOME" \
    GRADLE_USER_HOME=/home/jenkins/.gradle
# TODO: Remove MAVEN_OPTS env once cri-o pushes the $HOME variable in /etc/passwd
ADD .m2/settings.xml $HOME/.m2/
COPY set_maven_proxy.sh /tmp/set_maven_proxy.sh
COPY set_gradle_proxy.sh /tmp/set_gradle_proxy.sh
RUN mkdir -p $GRADLE_USER_HOME && \
    chmod +x /tmp/set_gradle_proxy.sh && \
    /tmp/set_gradle_proxy.sh && \
    mkdir -p $HOME/.m2 && \
    chmod +x /tmp/set_maven_proxy.sh && \
    mv $HOME/.m2/settings.xml $HOME/.m2/settings.xml.orig && \
    /tmp/set_maven_proxy.sh && \
    xpr=$(cat /tmp/mvn_proxy) && \
    xpr="${xpr//\//\\/}" && \
    xpr="${xpr//|/\\|}" && \
    cat $HOME/.m2/settings.xml.orig | sed -e "s|<proxies>|<proxies>$xpr|g" > $HOME/.m2/settings.xml && \
    sed -i "s/__NEXUS_USER/$nexusUsername/gi" $HOME/.m2/settings.xml && \
    sed -i "s/__NEXUS_PW/$nexusPassword/gi" $HOME/.m2/settings.xml && \
    sed -i "s|__NEXUS_URL|$nexusUrl|gi" $HOME/.m2/settings.xml && \
    cat $HOME/.m2/settings.xml

RUN chown -R 1001:0 $HOME && \
    chmod -R g+rwX $HOME && \
    chmod -c 666 /etc/pki/ca-trust/extracted/java/cacerts && \
    ls -la /etc/pki/ca-trust/extracted/java/cacerts

# temporary java version switch bugfix
USER root
RUN chgrp -R 0 /var/lib/alternatives && \
  chmod -R g=u /var/lib/alternatives && \
  chgrp -R 0 /etc/alternatives && \
  chmod -R g=u /etc/alternatives && \
  chmod -R u+w /usr/bin && \
  chgrp -R 0 /usr/bin && \
  chmod -R g=u /usr/bin && \
  chgrp -R 0 /usr/share/man && \
  chmod -R g=u /usr/share/man

USER 1001
